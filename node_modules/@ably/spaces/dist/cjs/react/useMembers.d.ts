import type { ErrorInfo } from 'ably';
import type { Space, SpaceMember } from '..';
import type { UseSpaceOptions } from './types.js';
import type { MembersEventMap } from '../Members.js';
interface UseMembersResult {
    space?: Space;
    /**
     * All members present in the space
     */
    members: SpaceMember[];
    /**
     * All members present in the space excluding the member associated with the spaces client
     */
    others: SpaceMember[];
    /**
     * The member associated with the spaces client
     */
    self: SpaceMember | null;
    channelError: ErrorInfo | null;
    connectionError: ErrorInfo | null;
}
type UseMembersCallback = (params: SpaceMember) => void;
type MembersEvent = keyof MembersEventMap;
declare function useMembers(callback?: UseMembersCallback, options?: UseSpaceOptions): UseMembersResult;
declare function useMembers(event: MembersEvent | MembersEvent[], callback: UseMembersCallback, options?: UseSpaceOptions): UseMembersResult;
export { useMembers };
