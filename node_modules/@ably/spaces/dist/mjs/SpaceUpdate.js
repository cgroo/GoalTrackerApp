import { nanoid } from 'nanoid';
class SpaceUpdate {
    constructor({ self, extras }) {
        this.self = self;
        this.extras = extras;
    }
    profileUpdate(id, current) {
        return { id, current };
    }
    profileNoChange() {
        return this.profileUpdate(null, this.self ? this.self.profileData : null);
    }
    locationUpdate(id, current, previous) {
        return { id, current, previous };
    }
    locationNoChange() {
        const location = this.self ? this.self.location : null;
        return this.locationUpdate(null, location, null);
    }
    updateProfileData(current) {
        return {
            data: {
                profileUpdate: this.profileUpdate(nanoid(), current),
                locationUpdate: this.locationNoChange(),
            },
            extras: this.extras,
        };
    }
    updateLocation(location, previousLocation) {
        var _a;
        return {
            data: {
                profileUpdate: this.profileNoChange(),
                locationUpdate: this.locationUpdate(nanoid(), location, previousLocation ? previousLocation : (_a = this.self) === null || _a === void 0 ? void 0 : _a.location),
            },
            extras: this.extras,
        };
    }
    noop() {
        return {
            data: {
                profileUpdate: this.profileNoChange(),
                locationUpdate: this.locationNoChange(),
            },
            extras: this.extras,
        };
    }
}
export default SpaceUpdate;
//# sourceMappingURL=SpaceUpdate.js.map